// Code generated by MockGen. DO NOT EDIT.
// Source: ./cache/order_stats_cache.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	types "github.com/NUS-ISS-Agile-Team/ceramicraft-order-mservice/server/pkg/types"
	gomock "github.com/golang/mock/gomock"
)

// MockIOrderStatsCache is a mock of IOrderStatsCache interface.
type MockIOrderStatsCache struct {
	ctrl     *gomock.Controller
	recorder *MockIOrderStatsCacheMockRecorder
}

// MockIOrderStatsCacheMockRecorder is the mock recorder for MockIOrderStatsCache.
type MockIOrderStatsCacheMockRecorder struct {
	mock *MockIOrderStatsCache
}

// NewMockIOrderStatsCache creates a new mock instance.
func NewMockIOrderStatsCache(ctrl *gomock.Controller) *MockIOrderStatsCache {
	mock := &MockIOrderStatsCache{ctrl: ctrl}
	mock.recorder = &MockIOrderStatsCacheMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIOrderStatsCache) EXPECT() *MockIOrderStatsCacheMockRecorder {
	return m.recorder
}

// GetOrderStats mocks base method.
func (m *MockIOrderStatsCache) GetOrderStats() (types.OrderStats, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOrderStats")
	ret0, _ := ret[0].(types.OrderStats)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOrderStats indicates an expected call of GetOrderStats.
func (mr *MockIOrderStatsCacheMockRecorder) GetOrderStats() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrderStats", reflect.TypeOf((*MockIOrderStatsCache)(nil).GetOrderStats))
}
