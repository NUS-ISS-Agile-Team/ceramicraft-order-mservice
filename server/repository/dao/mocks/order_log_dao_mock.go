// Code generated by MockGen. DO NOT EDIT.
// Source: ./dao/order_log_dao.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	model "github.com/NUS-ISS-Agile-Team/ceramicraft-order-mservice/server/repository/model"
	gomock "github.com/golang/mock/gomock"
)

// MockOrderLogDao is a mock of OrderLogDao interface.
type MockOrderLogDao struct {
	ctrl     *gomock.Controller
	recorder *MockOrderLogDaoMockRecorder
}

// MockOrderLogDaoMockRecorder is the mock recorder for MockOrderLogDao.
type MockOrderLogDaoMockRecorder struct {
	mock *MockOrderLogDao
}

// NewMockOrderLogDao creates a new mock instance.
func NewMockOrderLogDao(ctrl *gomock.Controller) *MockOrderLogDao {
	mock := &MockOrderLogDao{ctrl: ctrl}
	mock.recorder = &MockOrderLogDaoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOrderLogDao) EXPECT() *MockOrderLogDaoMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockOrderLogDao) Create(ctx context.Context, orderLog *model.OrderStatusLog) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, orderLog)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockOrderLogDaoMockRecorder) Create(ctx, orderLog interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockOrderLogDao)(nil).Create), ctx, orderLog)
}

// GetByOrderNo mocks base method.
func (m *MockOrderLogDao) GetByOrderNo(ctx context.Context, orderNo int) ([]*model.OrderStatusLog, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByOrderNo", ctx, orderNo)
	ret0, _ := ret[0].([]*model.OrderStatusLog)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByOrderNo indicates an expected call of GetByOrderNo.
func (mr *MockOrderLogDaoMockRecorder) GetByOrderNo(ctx, orderNo interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByOrderNo", reflect.TypeOf((*MockOrderLogDao)(nil).GetByOrderNo), ctx, orderNo)
}
